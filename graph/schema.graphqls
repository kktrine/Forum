type Post {
  id: ID!
  title: String!
  content: String!
  commentsLocked: Boolean!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  content: String!
  replies: Comment
}

type CommentEdge {
  node: Comment!
  cursor: String!
}

type CommentConnection {
  comments: [CommentEdge!]
  pageInfo: PageInfo!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

type Mutation {
  createPost(title: String!, content: String!, commentsLocked: Boolean): Post!
  createComment(postID: ID!, parentID: ID, content: String!): CommentConnection!
  lockComments(postID: ID!): Post!
}


type Query {
  posts: [Post!]!
  post(id: ID!): Post
  comments(id: ID, first: Int, after: String): CommentConnection!
}