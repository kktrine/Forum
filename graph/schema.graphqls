type Post {
  id: ID!
  title: String!
  content: String!
  commentsLocked: Boolean!
  hasComments: Boolean!
  comments: [Comment!]
}

type Comment {
  id: ID!
  postId: ID
  parentIdI: ID
  parentIdS: ID
  content: String!
  replies: [Comment!]
}

type CommentConnection {
  comments: [Comment!]
  pageInfo: PageInfo!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

type Mutation {
  createPost(title: String!, content: String!, commentsLocked: Boolean): Post!
  createComment(postID: ID!, parentIDI: ID, parentIDS: String, content: String!): Comment!
  lockComments(postID: ID!): Post!
}


type Query {
  posts: [Post!]
  post(id: ID!, limit: Int): Post
  comments(postID: ID!, first: Int, after: Int): CommentConnection!
}

type Subscription {
  newComment(postID: ID!): Comment!
}
